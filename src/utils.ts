// src/utils.ts
import { marked } from 'marked';
import DOMPurify from 'dompurify';

// Renamed from sanitizeHTML - this function escapes HTML special characters.
export function escapeHTML(str: string): string {
    const temp = document.createElement('div');
    temp.textContent = str;
    return temp.innerHTML;
}

// New function to sanitize HTML content (e.g., output from Markdown parser)
export function sanitizeAndRenderMarkdown(markdownText: string): string {
    if (typeof markdownText !== 'string') {
        markdownText = String(markdownText); // Ensure it's a string
    }
    try {
        // Configure DOMPurify to allow common Markdown elements.
        const dirtyHtml = marked.parse(markdownText) as string;
        const cleanHtml = DOMPurify.sanitize(dirtyHtml, {
            USE_PROFILES: { html: true },
            ADD_TAGS: ['ul', 'ol', 'li', 'p', 'strong', 'em', 'blockquote', 'code', 'pre', 'br', 'hr', 'a', 'img', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],
            ADD_ATTR: ['href', 'title', 'alt', 'src', 'id'], // Allow id for heading links if any
            ALLOW_DATA_ATTR: false, // Disallow data-* attributes
        });
        return cleanHtml;
    } catch (e) {
        console.error("Error in sanitizeAndRenderMarkdown:", e);
        // Fallback to basic escaping if DOMPurify or marked fails
        return escapeHTML(markdownText).replace(/\n/g, '<br>');
    }
}
// The formatCardsForPrompt function has been moved to the backend.
// The generateId function has been removed as IDs are now generated by the backend.
